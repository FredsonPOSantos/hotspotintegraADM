# Versão do Docker Compose
version: '3.8'

# Define os nossos três serviços (containers)
services:

  # Serviço da Base de Dados
  postgres:
    image: postgres:16-alpine  # Usa a imagem oficial e leve do PostgreSQL
    container_name: rotahotspot_postgres
    restart: always
    environment:
      POSTGRES_DB: radius
      POSTGRES_USER: radius
      POSTGRES_PASSWORD: rota1010 # IMPORTANTE: Use a mesma senha que definiu no psql
    volumes:
      - postgres_data:/var/lib/postgresql/data # Garante que os dados da base de dados persistem mesmo se o container for recriado
    ports:
      - "5432:5432" # Expõe a porta do PostgreSQL para que possamos aceder com o pgAdmin a partir do nosso computador

  # Serviço de Autenticação
  freeradius:
    build: ./freeradius # Ensina o Docker a construir este container a partir da pasta 'freeradius'
    container_name: rotahotspot_freeradius
    restart: always
    ports:
      - "1812:1812/udp" # Expõe a porta de autenticação RADIUS
      - "1813:1813/udp" # Expõe a porta de contabilização RADIUS
    depends_on:
      - postgres # Garante que o container do PostgreSQL seja iniciado antes do FreeRADIUS

  # Serviço do Portal de Registo
  backend:
    build: ./backend # Ensina o Docker a construir este container a partir da pasta 'backend'
    container_name: rotahotspot_backend
    restart: always
    ports:
      - "3000:3000" # Expõe a porta do nosso servidor Node.js
    env_file:
      - ./backend/.env # Diz ao container para usar as variáveis de ambiente do nosso ficheiro .env
    depends_on:
      - postgres # Garante que o container do PostgreSQL seja iniciado antes do nosso backend

# Define o volume para persistência dos dados do PostgreSQL
volumes:
  postgres_data:
